Attendance all page complete 
Leave Requests All page complete
Employee All page complete
login and singup complete



.auth-page {
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background: linear-gradient(to right, #0052d4, #4364f7);
  font-family: 'Poppins', sans-serif;
  padding: 20px;
}

.auth-box {
  background-color: #ffffff;
  width: 100%;
  max-width: 430px;
  padding: 45px 35px 35px;
  border-radius: 16px;
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);
}

.auth-title {
  text-align: center;
  font-size: 28px;
  font-weight: 700;
  color: #000;
  margin-bottom: 25px;
}

.auth-toggle {
  position: relative;
  display: flex;
  justify-content: space-between;
  background: #f1f1f1;
  border-radius: 12px;
  margin-bottom: 30px;
  height: 50px;
  overflow: hidden;
}

.auth-btn-slider {
  position: absolute;
  top: 0;
  left: 0;
  width: 50%;
  height: 100%;
  background: linear-gradient(to right, #003973, #0052d4);
  transition: left 0.3s ease;
  border-radius: 12px;
  z-index: 0;
}

.auth-toggle-btn {
  flex: 1;
  border: none;
  background: transparent;
  z-index: 1;
  font-weight: 600;
  font-size: 16px;
  cursor: pointer;
  color: #000;
  transition: color 0.3s ease;
}

.auth-toggle-btn.active {
  color: #fff;
}

.auth-input {
    margin-top: 15px !important;
}

.auth-link {
  font-size: 14px;
  margin-top: -10px;
  margin-bottom: 20px;
  text-align: left;
}

.auth-link a {
  color: #0052d4;
  text-decoration: none;
  font-weight: 500;
}

.auth-submit {
  background: linear-gradient(to right, #003973, #0052d4);
  color: #fff;
  border: none;
  width: 100%;
  padding: 12px;
  font-size: 17px;
  font-weight: 600;
  border-radius: 12px;
  cursor: pointer;
  transition: background 0.3s;
}

.auth-submit:hover {
  background: linear-gradient(to right, #00214e, #003973);
}

.auth-bottom-text {
  margin-top: 18px;
  text-align: center;
  font-size: 14px;
  color: #333;
}

.auth-bottom-text a {
  color: #0052d4;
  text-decoration: none;
  font-weight: 500;
  margin-left: 5px;
  cursor: pointer;
}

@media screen and (max-width: 480px) {
  .auth-box {
    padding: 35px 25px;
    width: 100%;
  }

  .auth-title {
    font-size: 24px;
  }

  .auth-submit {
    font-size: 16px;
  }
}



    import React, { useState, useEffect, useContext } from "react";
    import TextField from "@mui/material/TextField";
    import { mycontext } from "../App";
    import "./login.css";

    const LoginSignupForm = () => {
    const context = useContext(mycontext);
    useEffect(() => {
        context.setIsHideSidebarAndHeader(true);
    }, []);

    const [isLogin, setIsLogin] = useState(true);

    return (
        <div className="auth-page">
        <div className="auth-box">

            {/* Toggle Buttons */}
            <div className="auth-toggle">
            <div
                className="auth-btn-slider"
                style={{ left: isLogin ? "0px" : "50%" }}
            />
            <button
                className={`auth-toggle-btn ${isLogin ? "active" : ""}`}
                onClick={() => setIsLogin(true)}
            >
                Login
            </button>
            <button
                className={`auth-toggle-btn ${!isLogin ? "active" : ""}`}
                onClick={() => setIsLogin(false)}
            >
                Signup
            </button>
            </div>

            {isLogin &&(
            <h2 className="auth-title">Login Form</h2>
            )}
            {!isLogin &&(
                <h2 className="auth-title">singup Form</h2>
            )}
            {!isLogin && (
                <TextField
                label="Username"
                variant="outlined"
                fullWidth
                required
                className="auth-input"
                />
            )}
            <form className="auth-form">
            <TextField
                label="Email"
                variant="outlined"
                fullWidth
                required
                className="auth-input"
            />
            <TextField
                label="Password"
                variant="outlined"
                fullWidth
                required
                className="auth-input"
            />

            {!isLogin && (
                <TextField
                label="Confirm Password"
                variant="outlined"
                fullWidth
                required
                type="password"
                className="auth-input mb-3 "
                />
            )}

            {isLogin && (
                <div className="auth-link mt-3">
                <a href="#">Forgot password?</a>
                </div>
            )}

            <button type="submit" className="auth-submit">
                {isLogin ? "Login" : "Signup"}
            </button>

            <div className="auth-bottom-text">
                {isLogin ? (
                <>
                    Not a member? <a onClick={() => setIsLogin(false)}>Signup now</a>
                </>
                ) : (
                <>
                    Already a member? <a onClick={() => setIsLogin(true)}>Login here</a>
                </>
                )}
            </div>
            </form>
        </div>
        </div>
    );
    };

    export default LoginSignupForm;

    echo "# Empmangment" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/VasuKakadiya20/Empmangment.git
git push -u origin main
