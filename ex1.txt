import { mycontext } from "../../App";
import Menu from "@mui/material/Menu";
import { IoMenu } from "react-icons/io5";
import UserImg from "../User Img/UserImg";
import Button from "@mui/material/Button";
import Divider from "@mui/material/Divider";
import MenuItem from "@mui/material/MenuItem";
import { MdOutlineMenu } from "react-icons/md";
import SearchBox from "../SearchBox/SearchBox";
import { IoMdPersonAdd } from "react-icons/io";
import logo from "../../assets/images/logo.png";
import user from "../../assets/images/user.png";
import { MdOutlineEmail } from "react-icons/md";
import { MdArrowDropDown } from "react-icons/md";
import { IoSettingsSharp } from "react-icons/io5";
import { MdOutlineMenuOpen } from "react-icons/md";
import React, { useContext, useEffect, useState } from "react";
import { data, Link, useNavigate } from "react-router-dom";
import ListItemIcon from "@mui/material/ListItemIcon";
import { MdOutlineNotifications } from "react-icons/md";
import LockOutlineIcon from "@mui/icons-material/LockOutline";
import { fetchDataFromApi } from "../../uttils/api";
import { io } from "socket.io-client"; // Import Socket.IO client

const socket = io("http://your-server-url"); // Replace with your server URL

export const Header = () => {
  const [anchorEl, setAnchorEl] = React.useState(null);
  const [leaveData, setLeaveData] = useState([]);
  const [notifications, setNotifications] = useState([]); // State for notifications
  const [isOpennotificationsDrop, setIsOpenNotificationsDrop] = useState(null);
  const storedUser  = JSON.parse(localStorage.getItem("user")) || { user: {} };
  const context = useContext(mycontext);
  const navigate = useNavigate();

  const openNotifications = Boolean(isOpennotificationsDrop);
  const handleOpenNotificationsDrop = () => {
    setIsOpenNotificationsDrop(true);
  };

  const handleCloseNotificationsDrop = () => {
    setIsOpenNotificationsDrop(false);
  };

  const logout = () => {
    context.setislogin(false);
    localStorage.removeItem("user");
    handleCloseMyAccDrop();
    navigate("/");
  };

  useEffect(() => {
    fetchDataFromApi("/leave/").then((res) => {
      setLeaveData(res);
    });

    // Listen for notifications from the server
    socket.on("notification", (notification) => {
      setNotifications((prev) => [...prev, notification]);
    });

    // Clean up the socket connection on component unmount
    return () => {
      socket.off("notification");
    };
  }, []);

  return (
    <>
      <header className="d-flex align-items-center">
        <div className="container-fluid w-100">
          <div className="row d-flex align-items-center w-100">
            <div className="col-sm-2 part1">
              <Link to={"#"} className="d-flex align-items-center logo gap-2">
                <img src={logo} alt="logo" />
                <span className="ml-2">TeamTrack</span>
              </Link>
            </div>
            <div className="col-sm-7 d-flex align-items-center justify-content-end gap-3 part3">
              <div className="dropdownWrapper position-relative ml-5">
                <Button
                  className="rounded-circle mr-3"
                  onClick={handleOpenNotificationsDrop}>
                  <MdOutlineNotifications />
                </Button>

                <Menu
                  anchorEl={isOpennotificationsDrop}
                  id="notifications"
                  className="notifications dropdown_list head"
                  open={openNotifications}
                  onClose={handleCloseNotificationsDrop}
                  slotProps={{
                    paper: {
                      elevation: 0,
                      sx: {
                        overflow: "visible",
                        filter: "drop-shadow(0px 2px 8px rgba(0,0,0,0.32))",
                      },
                    },
                  }}
                  transformOrigin={{ horizontal: "right", vertical: "top" }}
                  anchorOrigin={{ horizontal: "right", vertical: "bottom" }}>
                  <div className="heads pl-3 pb-0">
                    <h4 id="orders" style={{ fontSize: "1.3rem" }}>
                      Notifications
                    </h4>
                  </div>

                  <Divider className="mb-1" />

                  <div className="scroll">
                    {notifications.length > 0 ? (
                      notifications.map((item, index) => (
                        <MenuItem key={index} onClick={handleCloseNotificationsDrop}>
                          <div className="d-flex">
                            <div>
                              <User Img img={user} />
                            </div>
                            <div className="dropdown-info">
                              <h4>
                                <span>
                                  <b>{item.name}</b>
                                  <br />
                                  <b>requested leave for {item.Numberofdays} days</b>
                                </span>
                              </h4>
                              <p className="text-sky mb-0">
                                {new Date(item.RequestedOn).toLocaleDateString()}
                              </p>
                            </div>
                          </div>
                        </MenuItem>
                      ))
                    ) : (
                      <MenuItem>
                        <div className="d-flex">
                          <p>No new notifications</p>
                        </div>
                      </MenuItem>
                    )}
                  </div>

                  <div className="pl-5 pr-5 pb-1 mt-2 w-100">
                    <Button className="btn-blue w-100 py-2 px-3">
                      View all notifications
                    </Button>
                  </div>
                </Menu>
              </div>
                {context.islogin !== true ? (
                <Link to={"/"}>
                  <Button className="btn-blue btn-big btn-round">Sign in</Button>
                </Link>
              ) : (
                <div className="myacc-wrapper">
                  <Button
                    className="myacc d-flex align-items-center"
                    onClick={handleOpenMyAccDrop}>
                    <div className="user-img">
                      <span className="rounded-circle">
                        <img src={user} alt="user" />
                      </span>
                    </div>
                    <div className="use-info res-hide">
                      <h4>
                        {storedUser.user.name || "admin"}
                        <MdArrowDropDown style={{ fontSize: "22px" }} />
                      </h4>
                      <p className="mb-0">{storedUser.user.Email || "admin@example.com"}</p>
                    </div>
                  </Button>
                  <Menu
                    anchorEl={anchorEl}
                    id="account-menu"
                    open={openMyacc}
                    onClose={handleCloseMyAccDrop}
                    onClick={handleCloseMyAccDrop}
                    slotProps={{
                      paper: {
                        elevation: 0,
                        sx: {
                          overflow: "visible",
                          filter: "drop-shadow(0px 2px 8px rgba(0,0,0,0.32))",
                          mt: 1.5,
                          "& .MuiAvatar-root": {
                            width: 32,
                            height: 32,
                            ml: -0.5,
                            mr: 1,
                          },
                          "&::before": {
                            content: '""',
                            display: "block",
                            position: "absolute",
                            top: 0,
                            right: 14,
                            width: 10,
                            height: 10,
                            bgcolor: "background.paper",
                            transform: "translateY(-50%) rotate(45deg)",
                            zIndex: 0,
                          },
                        },
                      },
                    }}
                    transformOrigin={{ horizontal: "right", vertical: "top" }}
                    anchorOrigin={{ horizontal: "right", vertical: "bottom" }}>
                    <MenuItem onClick={handleCloseMyAccDrop}>
                      <ListItemIcon>
                        <IoMdPersonAdd fontSize="small" />
                      </ListItemIcon>
                      My account
                    </MenuItem>
                    <MenuItem onClick={handleCloseMyAccDrop}>
                      <ListItemIcon>
                        <MdOutlineEmail />
                      </ListItemIcon>
                      In Box
                    </MenuItem>
                    <MenuItem onClick={handleCloseMyAccDrop}>
                      <ListItemIcon>
                        <IoSettingsSharp />
                      </ListItemIcon>
                      Settings
                    </MenuItem>
                    <MenuItem className="logout"
                      onClick={() => logout()}>
                      <ListItemIcon>
                        <LockOutlineIcon fontSize="small" />
                      </ListItemIcon>
                      Logout
                    </MenuItem>
                  </Menu>
                </div>
              )}
            </div>
          </div>
        </div>
      </header>
    </>
  );
};

export default Header;
